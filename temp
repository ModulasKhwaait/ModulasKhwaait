CREATE TABLE FileHeader (
    Id INT PRIMARY KEY IDENTITY,
    SenderId NVARCHAR(50),
    ReceiverId NVARCHAR(50),
    FileCreationDate NVARCHAR(20),
    FileCreationTime NVARCHAR(20),
    FileIdNumber BIGINT,
    RecordLength BIGINT,
    BlockSize BIGINT,
    VersionNumber BIGINT
);

CREATE TABLE GroupHeader (
    Id INT PRIMARY KEY IDENTITY,
    ReceiverId NVARCHAR(50),
    SenderId NVARCHAR(50),
    GroupStatus NVARCHAR(10),
    AsOfDate NVARCHAR(20),
    AsOfTime NVARCHAR(20),
    CurrencyCode NVARCHAR(10),
    AsOfDateModifier INT,
    FileHeaderId INT FOREIGN KEY REFERENCES FileHeader(Id)
);

CREATE TABLE AccountRecord (
    Id INT PRIMARY KEY IDENTITY,
    AccountNumber NVARCHAR(50),
    CurrencyCode NVARCHAR(10),
    GroupHeaderId INT FOREIGN KEY REFERENCES GroupHeader(Id)
);

CREATE TABLE AccountDetails (
    Id INT PRIMARY KEY IDENTITY,
    TypeCode NVARCHAR(10),
    Amount DECIMAL(18, 2),
    ItemCount BIGINT,
    AccountRecordId INT FOREIGN KEY REFERENCES AccountRecord(Id)
);

CREATE TABLE TransactionRecord (
    Id INT PRIMARY KEY IDENTITY,
    TypeCode NVARCHAR(10),
    Amount DECIMAL(18, 2),
    BankReferenceNumber NVARCHAR(50),
    CustomerReferenceNumber NVARCHAR(50),
    Text NVARCHAR(MAX),
    AccountRecordId INT FOREIGN KEY REFERENCES AccountRecord(Id)
);

CREATE TABLE AccountTotals (
    Id INT PRIMARY KEY IDENTITY,
    AccountControlTotal DECIMAL(18, 2),
    NumberOfRecords BIGINT,
    AccountRecordId INT FOREIGN KEY REFERENCES AccountRecord(Id)
);

CREATE TABLE GroupTotals (
    Id INT PRIMARY KEY IDENTITY,
    GroupControlTotal DECIMAL(18, 2),
    NumberOfAccounts BIGINT,
    NumberOfRecords BIGINT,
    GroupHeaderId INT FOREIGN KEY REFERENCES GroupHeader(Id)
);

CREATE TABLE FileTrailer (
    Id INT PRIMARY KEY IDENTITY,
    FileControlTotal DECIMAL(18, 2),
    NumberOfGroups BIGINT,
    NumberOfRecords BIGINT,
    FileHeaderId INT FOREIGN KEY REFERENCES FileHeader(Id)
);

CREATE TABLE FundType (
    Id INT PRIMARY KEY IDENTITY,
    FundsType NVARCHAR(10),
    ImmediateAmount DECIMAL(18, 2),
    OneDayAmount DECIMAL(18, 2),
    TwoOrMoreDaysAmount DECIMAL(18, 2),
    ValueDate NVARCHAR(20),
    ValueTime NVARCHAR(20),
    NumberOfDistributions BIGINT,
    DistributionInfo NVARCHAR(MAX),
    AccountDetailId INT FOREIGN KEY REFERENCES AccountDetails(Id),
    TransactionRecordId INT FOREIGN KEY REFERENCES TransactionRecord(Id)
);










{
  "FileHeader": {
    "SenderId": "ABC",
    "ReceiverId": "XYZ",
    "FileCreationDate": "2023-01-01",
    "FileCreationTime": "12:00:00",
    "FileIdNumber": 1,
    "RecordLength": 0,
    "BlockSize": 100,
    "VersionNumber": 2
  },
  "Groups": [
    {
      "ReceiverId": "XYZ",
      "SenderId": "ABC",
      "GroupStatus": "Status",
      "AsOfDate": "2023-01-01",
      "AsOfTime": "12:00:00",
      "CurrencyCode": "USD",
      "AsOfDateModifier": 1,
      "Accounts": [
        {
          "AccountNumber": "123456789",
          "CurrencyCode": "USD",
          "Details": [
            {
              "TypeCode": "Code1",
              "Amount": 100.00,
              "ItemCount": 1,
              "FundsType": {
                "FundsType": "S",
                "ImmediateAmount": 50.00,
                "OneDayAmount": 30.00,
                "TwoOrMoreDaysAmount": 20.00
              }
            }
          ],
          "TransactionRecords": [
            {
              "TypeCode": "TCode",
              "Amount": 100.00,
              "BankReferenceNumber": "BRN",
              "CustomerReferenceNumber": "CRN",
              "Text": "Transaction Text",
              "FundsType": {
                "FundsType": "S",
                "ImmediateAmount": 50.00,
                "OneDayAmount": 30.00,
                "TwoOrMoreDaysAmount": 20.00
              }
            }
          ],
          "AccountTotals": {
            "AccountControlTotal": 100.00,
            "NumberOfRecords": 1
          }
        }
      ],
      "GroupTotals": {
        "GroupControlTotal": 100.00,
        "NumberOfAccounts": 1,
        "NumberOfRecords": 1
      }
    }
  ],
  "FileTrailer": {
    "FileControlTotal": 100.00,
    "NumberOfGroups": 1,
    "NumberOfRecords": 1
  }
}


DECLARE @json NVARCHAR(MAX);
SET @json = '{
  "FileHeader": { ... }, 
  "Groups": [ ... ],
  "FileTrailer": { ... }
}';

-- Insert FileHeader
INSERT INTO FileHeader (SenderId, ReceiverId, FileCreationDate, FileCreationTime, FileIdNumber, RecordLength, BlockSize, VersionNumber)
SELECT
    JSON_VALUE(@json, '$.FileHeader.SenderId'),
    JSON_VALUE(@json, '$.FileHeader.ReceiverId'),
    JSON_VALUE(@json, '$.FileHeader.FileCreationDate'),
    JSON_VALUE(@json, '$.FileHeader.FileCreationTime'),
    CAST(JSON_VALUE(@json, '$.FileHeader.FileIdNumber') AS BIGINT),
    CAST(JSON_VALUE(@json, '$.FileHeader.RecordLength') AS BIGINT),
    CAST(JSON_VALUE(@json, '$.FileHeader.BlockSize') AS BIGINT),
    CAST(JSON_VALUE(@json, '$.FileHeader.VersionNumber') AS BIGINT);

-- Assuming the Id for the FileHeader is 1 (or use OUTPUT INSERTED.Id to capture it)
DECLARE @FileHeaderId INT = SCOPE_IDENTITY();

-- Insert Groups
INSERT INTO GroupHeader (ReceiverId, SenderId, GroupStatus, AsOfDate, AsOfTime, CurrencyCode, AsOfDateModifier, FileHeaderId)
SELECT
    JSON_VALUE(group.value, '$.ReceiverId'),
    JSON_VALUE(group.value, '$.SenderId'),
    JSON_VALUE(group.value, '$.GroupStatus'),
    JSON_VALUE(group.value, '$.AsOfDate'),
    JSON_VALUE(group.value, '$.AsOfTime'),
    JSON_VALUE(group.value, '$.CurrencyCode'),
    CAST(JSON_VALUE(group.value, '$.AsOfDateModifier') AS INT),
    @FileHeaderId
FROM OPENJSON(@json, '$.Groups') AS group;

-- Assuming the Id for the GroupHeader is 1 (or use OUTPUT INSERTED.Id to capture it)
DECLARE @GroupHeaderId INT = SCOPE_IDENTITY();

-- Insert Accounts
INSERT INTO AccountRecord (AccountNumber, CurrencyCode, GroupHeaderId)
SELECT
    JSON_VALUE(account.value, '$.AccountNumber'),
    JSON_VALUE(account.value, '$.CurrencyCode'),
    @GroupHeaderId
FROM OPENJSON(@json, '$.Groups[0].Accounts') AS account;

-- Assuming the Id for the AccountRecord is 1 (or use OUTPUT INSERTED.Id to capture it)
DECLARE @AccountRecordId INT = SCOPE_IDENTITY();

-- Insert AccountDetails
INSERT INTO AccountDetails (TypeCode, Amount, ItemCount, AccountRecordId)
SELECT
    JSON_VALUE(detail.value, '$.TypeCode'),
    CAST(JSON_VALUE(detail.value, '$.Amount') AS DECIMAL(18, 2)),
    CAST(JSON_VALUE(detail.value, '$.ItemCount') AS BIGINT),
    @AccountRecordId
FROM OPENJSON(@json, '$.Groups[0].Accounts[0].Details') AS detail;

-- Assuming the Id for the AccountDetails is 1 (or use OUTPUT INSERTED.Id to capture it)
DECLARE @AccountDetailId INT = SCOPE_IDENTITY();

-- Insert FundType for AccountDetails
INSERT INTO FundType (FundsType, ImmediateAmount, OneDayAmount, TwoOrMoreDaysAmount, ValueDate, ValueTime, NumberOfDistributions, DistributionInfo, AccountDetailsId)
SELECT
    JSON_VALUE(fund.value, '$.FundsType'),
    CAST(JSON_VALUE(fund.value, '$.ImmediateAmount') AS DECIMAL(18, 2)),
    CAST(JSON_VALUE(fund.value, '$.OneDayAmount') AS DECIMAL(18, 2)),
    CAST(JSON_VALUE(fund.value, '$.TwoOrMoreDaysAmount') AS DECIMAL(18, 2)),
    JSON_VALUE(fund.value, '$.ValueDate'),
    JSON_VALUE(fund.value, '$.ValueTime'),
    CAST(JSON_VALUE(fund.value, '$.NumberOfDistributions') AS BIGINT),
    JSON_VALUE(fund.value, '$.DistributionInfo'),
    @AccountDetailId
FROM OPENJSON(@json, '$.Groups[0].Accounts[0].Details[0].FundsType') AS fund;

-- Insert TransactionRecords
INSERT INTO TransactionRecord (TypeCode, Amount, BankReferenceNumber, CustomerReferenceNumber, Text, AccountRecordId)
SELECT
    JSON_VALUE(transaction.value, '$.TypeCode'),
    CAST(JSON_VALUE(transaction.value, '$.Amount') AS DECIMAL(18, 2)),
    JSON_VALUE(transaction.value, '$.BankReferenceNumber'),
    JSON_VALUE(transaction.value, '$.CustomerReferenceNumber'),
    JSON_VALUE(transaction.value, '$.Text'),
    @AccountRecordId
FROM OPENJSON(@json, '$.Groups[0].Accounts[0].TransactionRecords') AS transaction;

-- Assuming the Id for the TransactionRecord is 1 (or use OUTPUT INSERTED.Id to capture it)
DECLARE @TransactionRecordId INT = SCOPE_IDENTITY();

-- Insert FundType for TransactionRecords
INSERT INTO FundType (FundsType, ImmediateAmount, OneDayAmount, TwoOrMoreDaysAmount, ValueDate, ValueTime, NumberOfDistributions, DistributionInfo, TransactionRecordId)
SELECT
    JSON_VALUE(fund.value, '$.FundsType'),
    CAST(JSON_VALUE(fund.value, '$.ImmediateAmount') AS DECIMAL(18, 2)),
    CAST(JSON_VALUE(fund.value, '$.OneDayAmount') AS DECIMAL(18, 2)),
    CAST(JSON_VALUE(fund.value, '$.TwoOrMoreDaysAmount') AS DECIMAL(18, 2)),
    JSON_VALUE(fund.value, '$.ValueDate'),
    JSON_VALUE(fund.value, '$.ValueTime'),
    CAST(JSON_VALUE(fund.value, '$.NumberOfDistributions') AS BIGINT),
    JSON_VALUE(fund.value, '$.DistributionInfo'),
    @TransactionRecordId
FROM OPENJSON(@json, '$.Groups[0].Accounts[0].TransactionRecords[0].FundsType') AS fund;

-- Insert AccountTotals
INSERT INTO AccountTotals (AccountControlTotal, NumberOfRecords, AccountRecordId)
SELECT
    CAST(JSON_VALUE(accountTotal.value, '$.AccountControlTotal') AS DECIMAL(18, 2)),
    CAST(JSON_VALUE(accountTotal.value, '$.NumberOfRecords') AS BIGINT),
    @AccountRecordId
FROM OPENJSON(@json, '$.Groups[0].Accounts[0].AccountTotals') AS accountTotal;

-- Insert GroupTotals
INSERT INTO GroupTotals (GroupControlTotal, NumberOfAccounts, NumberOfRecords, GroupHeaderId)
SELECT
    CAST(JSON_VALUE(groupTotal.value, '$.GroupControlTotal') AS DECIMAL(18, 2)),
    CAST(JSON_VALUE(groupTotal.value, '$.NumberOfAccounts') AS BIGINT),
    CAST(JSON_VALUE(groupTotal.value, '$.NumberOfRecords') AS BIGINT),
    @GroupHeaderId
FROM OPENJSON(@json, '$.Groups[0].GroupTotals') AS groupTotal;

-- Insert FileTrailer
INSERT INTO FileTrailer (FileControlTotal, NumberOfGroups, NumberOfRecords, FileHeaderId)
SELECT
    CAST(JSON_VALUE(@json, '$.FileTrailer.FileControlTotal') AS DECIMAL(18, 2)),
    CAST(JSON_VALUE(@json, '$.FileTrailer.NumberOfGroups') AS BIGINT),
    CAST(JSON_VALUE(@json, '$.FileTrailer.NumberOfRecords') AS BIGINT),
    @FileHeaderId;














DECLARE @json NVARCHAR(MAX) = '...'; -- Replace with your JSON string

-- Insert into FileHeader
INSERT INTO FileHeader (ReceiverId, SenderId, OtherField, ...)
VALUES (
    JSON_VALUE(@json, '$.FileHeader.ReceiverId'),
    JSON_VALUE(@json, '$.FileHeader.SenderId'),
    JSON_VALUE(@json, '$.FileHeader.OtherField'),
    ...
);

-- Insert into GroupHeaders dynamically
DECLARE @jsonGroupHeaders NVARCHAR(MAX);
SELECT @jsonGroupHeaders = JSON_QUERY(@json, '$.GroupHeaders');

DECLARE @idx INT = 0;
DECLARE @rowCount INT = JSON_QUERY(@jsonGroupHeaders, '$.lax $');
DECLARE @current JSON;

WHILE @idx < @rowCount
BEGIN
    SELECT @current = JSON_QUERY(@jsonGroupHeaders, '$[' + CAST(@idx AS NVARCHAR(10)) + ']');

    INSERT INTO GroupHeaders (ReceiverId, SenderId, GroupStatus, ...)
    VALUES (
        JSON_VALUE(@current, '$.ReceiverId'),
        JSON_VALUE(@current, '$.SenderId'),
        JSON_VALUE(@current, '$.GroupStatus'),
        ...
    );

    SET @idx = @idx + 1;
END;

-- Insert into OtherTables dynamically
DECLARE @jsonOtherTables NVARCHAR(MAX);
SELECT @jsonOtherTables = JSON_QUERY(@json, '$.OtherTables');

-- Insert each object in OtherTables array
SET @idx = 0;
SET @rowCount = JSON_QUERY(@jsonOtherTables, '$.lax $');

WHILE @idx < @rowCount
BEGIN
    SELECT @current = JSON_QUERY(@jsonOtherTables, '$[' + CAST(@idx AS NVARCHAR(10)) + ']');

    INSERT INTO OtherTables (Column1, Column2, ...)
    VALUES (
        JSON_VALUE(@current, '$.Column1'),
        JSON_VALUE(@current, '$.Column2'),
        ...
    );

    SET @idx = @idx + 1;
END;
